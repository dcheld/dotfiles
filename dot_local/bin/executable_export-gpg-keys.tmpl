{{- if .gpg.keyId -}}
#!/bin/bash

set -euo pipefail

# Verificar se a chave GPG est√° configurada
if [[ -z "{{ .gpg.keyId }}" ]]; then
    echo "‚ùå A chave GPG n√£o foi configurada corretamente. O script n√£o pode continuar."
    exit 1
fi

# IDs configurados via Chezmoi
GPG_KEY_ID="{{ .gpg.keyId }}"
KEY_NAME="{{ .gpg.keyName }}"
BW_SECRET_ID="{{ .bw.gpgItemid }}"

# Arquivos tempor√°rios
PRIVATE_KEY_FILE="/tmp/${KEY_NAME}-private-key.asc"
PUBLIC_KEY_FILE="/tmp/${KEY_NAME}-public-key.asc"
REVOCATION_FILE="/tmp/${KEY_NAME}-revocation-cert.asc"

# Definir trap para sempre executar cleanup ao sair do script
trap cleanup EXIT

# Fun√ß√£o para verificar depend√™ncias
check_dependencies() {
    local missing_packages=()
    local missing_bw=true  # Assume que o Bitwarden est√° ausente

    for cmd in gpg shred; do
        if ! command -v "$cmd" &>/dev/null; then
            missing_packages+=("$cmd")
        fi
    done

    # Verifica Bitwarden separadamente (snap n√£o adiciona ao PATH global)
    if command -v bw &>/dev/null || snap list | grep -q "^bw "; then
        missing_bw=false
    fi

    if [[ $missing_bw == true ]]; then
        missing_packages+=("bw (Bitwarden CLI)")
    fi

    if [[ ${#missing_packages[@]} -gt 0 ]]; then
        echo "‚ùå Depend√™ncias ausentes: ${missing_packages[*]}"
        exit 1
    fi
}

# Fun√ß√£o para exportar chaves
export_gpg_keys() {
    echo "üîë Exportando chave privada..."
    gpg --export-secret-keys --armor "$GPG_KEY_ID" > "$PRIVATE_KEY_FILE"

    echo "üîì Exportando chave p√∫blica..."
    gpg --export --armor "$GPG_KEY_ID" > "$PUBLIC_KEY_FILE"

    echo "‚ùå Criando certificado de revoga√ß√£o..."
    gpg --gen-revoke "$GPG_KEY_ID" > "$REVOCATION_FILE"
}

# Fun√ß√£o para enviar ao Bitwarden
upload_to_bitwarden() {
    echo "üîì Desbloqueando Bitwarden..."
    BW_SESSION=$(bw unlock --raw)
    export BW_SESSION

    for file in "$PRIVATE_KEY_FILE" "$PUBLIC_KEY_FILE" "$REVOCATION_FILE"; do
        echo "‚òÅÔ∏è Enviando $file para o Bitwarden..."
        bw create attachment --file "$file" --itemid "$BW_SECRET_ID" --session "$BW_SESSION"
    done
}

# Fun√ß√£o de limpeza (ser√° sempre chamada pelo trap)
cleanup() {
    echo "üóëÔ∏è Limpando arquivos tempor√°rios..."
    local removidos=()
    local erro_arquivos=()

    for file in "$PRIVATE_KEY_FILE" "$PUBLIC_KEY_FILE" "$REVOCATION_FILE"; do
        if [[ -f "$file" ]]; then
            if shred -u "$file"; then
                removidos+=("$file")
            else
                erro_arquivos+=("$file")
            fi
        fi
    done

    if [[ ${#removidos[@]} -gt 0 ]]; then
        echo "‚úÖ Arquivos removidos com sucesso:"
        printf '  - %s\n' "${removidos[@]}"
    fi

    if [[ ${#erro_arquivos[@]} -gt 0 ]]; then
        echo "‚ö†Ô∏è N√£o foi poss√≠vel remover os seguintes arquivos:"
        printf '  - %s\n' "${erro_arquivos[@]}"
    fi
}

# Execu√ß√£o do script
check_dependencies
export_gpg_keys
upload_to_bitwarden

echo "‚úÖ Chaves GPG exportadas e enviadas ao Bitwarden com sucesso!"
{{- end }}